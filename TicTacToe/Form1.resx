<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S/HQm6gAAAAASUVORK5CYII=
</value>
  </data>
</root>